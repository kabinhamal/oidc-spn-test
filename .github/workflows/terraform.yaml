name: Push

on:
  push:
    branches:
      - main
      - prod

env:
  TF_LOG: INFO
  STORAGE_ACCOUNT: "tfstate5659"
  CONTAINER_NAME: "aztfstate"
  RESOURCE_GROUP: "tfstate"
  TF_KEY:  "test.tfstate"
  #TF_VARS: "auth.tfvars"
  
#   ###AZURE Client details###
#   ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
#   ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
#   ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
#   ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}
      

jobs: 
  deploy-infra:
    runs-on: ubuntu-latest
    environment: prod
    env:
      ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
      ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}
      
    defaults:
      run:
        shell: bash
        working-directory: './iac'
        
        
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
        
    # Install the latest version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
          terraform_version: 1.3.3
             
    # Run Terraform init
    - name: Terraform Init
      id: init
      run: terraform init --backend-config="storage_account_name=$STORAGE_ACCOUNT" --backend-config="container_name=$CONTAINER_NAME" --backend-config="resource_group_name=$RESOURCE_GROUP" --backend-config="key=$TF_KEY"
   
    - name: Terraform Format
      continue-on-error: true
      id: fmt
      run: terraform fmt --check
      
    - name: Terraform Validate
      id: validate
      run: terraform validate
      
    - name: Terraform Plan
      id: plan
      run: terraform plan --var-file=$TF_VARS --out=plan.tfplan 
      continue-on-error: true
      
    # Run a Terraform apply
    - name: Terraform apply
      id: apply
      run: terraform apply -auto-approve
